name: CI

on:
  push:
    branches: ["**"] # Run on all branches
  pull_request:
    branches: ["**"] # Run on all pull requests

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Install pre-commit
        run: |
          uv tool install pre-commit

      - name: Run pre-commit
        run: |
          uv tool run pre-commit run --all-files

  test:
    needs: pre-commit # Run tests only after pre-commit passes
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
          enable-cache: true

      - name: Set up virtual environment
        run: |
          uv venv --python ${{ matrix.python-version }}

      - name: Activate virtual environment (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo ".venv/bin" >> $GITHUB_PATH

      - name: Activate virtual environment (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "VIRTUAL_ENV=.venv" >> $env:GITHUB_ENV
          echo ".venv\Scripts" >> $env:GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install -e .
          uv pip install --group dev

      - name: Run linting and type checking
        run: |
          uv run ruff check .

      - name: Run tests with coverage
        run: |
          uv run pytest --cov=src/s2dm --cov-report=xml --cov-report=term-missing

      - name: Upload coverage reports
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
