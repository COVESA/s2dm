type TestTypeModifiers {
    # field.case.DEFAULT
    defaultScalar: Boolean
    defaultType: ExampleType
    defaultWithInstances: ExampleTypeWithInstances

    
    # field.case.NON_NULL
    nonNullScalar: Boolean!
    nonNull: ExampleType!
    nonNullWithInstances: ExampleTypeWithInstances!

    # field.case.LIST
    listScalar: [Boolean]
    list: [ExampleType]
    listWithInstances: [ExampleTypeWithInstances]

    # field.case.NON_NULL_LIST
    nonNullListScalar: [Boolean]!
    nonNullList: [ExampleType]!
    nonNullListWithInstances: [ExampleTypeWithInstances]!
    
    # field.case.LIST_NON_NULL
    listNonNullScalar: [Boolean!]
    listNonNull: [ExampleType!]
    listNonNullWithInstances: [ExampleTypeWithInstances!]
    
    # field.case.NON_NULL_LIST_NON_NULL
    nonNullListNonNullScalar: [Boolean!]!
    nonNullListNonNull: [ExampleType!]!
    nonNullListNonNullWithInstances: [ExampleTypeWithInstances!]!

    # field.case.SET
    #setScalar: [Boolean] @noDuplicates
    #set: [ExampleType] @noDuplicates
    #setWithInstances: [ExampleTypeWithInstances] @noDuplicates

    # field.case.LIST_NON_NULL
    #setNonNullScalar: [Boolean!] @noDuplicates
    #setNonNull: [ExampleType!] @noDuplicates
    #setNonNullWithInstances: [ExampleTypeWithInstances!] @noDuplicates
    
}

type ExampleType {
    someField: Boolean
}

type ExampleTypeWithInstances {
    instanceTag: ExampleTypeInstance
    anotherField: Boolean
}

type ExampleTypeInstance @instanceTag {
    letter: LetterEnum
    number: NumberEnum
}

enum LetterEnum {
    A
    B
}

enum NumberEnum {
    ONE
    TWO
}